// mixins

//////////////////////
//  media queries   //
//////////////////////

@mixin mq-base {
  @media (max-width: #{map-get($breakpoints, 'small') - 1px}) {
    @content;
  }
}

@mixin mq-small {
  @media (min-width: #{map-get($breakpoints, 'small')}) {
    @content;
  }
}

@mixin mq-medium {
  @media (min-width: #{map-get($breakpoints, 'medium')}) {
    @content;
  }
}

@mixin mq-large {
  @media (min-width: #{map-get($breakpoints, 'large')}) {
    @content;
  }
}

@mixin mq-full {
  @media (min-width: #{map-get($breakpoints, 'full')}) {
    @content;
  }
}


//////////////////////
//  typographical   //
//////////////////////

@mixin font-face($family, $src, $style: normal, $weight: normal) {
  @font-face {
    font-family: $family;
    font-style: $style;
    font-weight: $weight;
    src: url('#{$src}.eot?#iefix') format('embedded-opentype'), // IE8 and below
    url('#{$src}.woff') format('woff'), // standard
    url('#{$src}.ttf') format('truetype'), // Safari, Android, iOS
    url('#{$src}.svg##{$family}') format('svg'); // legacy iOS
  }
}

/// Converts font-size to rem units. Provides default margin-bottom as a proportional value based on the font-size and line-height.
/// @param $font-size-px - font size as pixels
/// @param $bottom-margin-adjust - optional value from 0 (no margin-bottom) to 2 (margin-bottom adjustments)
/// @return - font-size in rem units and default or configurable margin-bottom 
@mixin font-size-margin-ratio($font-size-px, $bottom-margin-adjust: null) {
  $font-size-rem: calc-rem($font-size-px);
  font-size: #{$font-size-rem}#{'rem'};

  @if $bottom-margin-adjust == 0 {
    $margin: null;
  } @else if $bottom-margin-adjust == 2 {
    $margin: ($base-line-height / $font-size-rem) * 2;
    margin-bottom: #{$margin}#{'rem'};
  } @else if $bottom-margin-adjust == 1 {
    $margin: ($base-line-height / $font-size-rem);
    margin-bottom: #{$margin}#{'rem'};
  } @else if $bottom-margin-adjust == 1.5 {
    $margin: ($base-line-height / $font-size-rem) * 1.5;
    margin-bottom: #{$margin}#{'rem'};
  } @else if $bottom-margin-adjust == .5 {
    $margin: ($base-line-height / $font-size-rem) / 2;
    margin-bottom: #{$margin}#{'rem'};
  } @else if $bottom-margin-adjust == .25 {
    $margin: ($base-line-height / $font-size-rem) / 4;
    margin-bottom: #{$margin}#{'rem'};
  } @else if $bottom-margin-adjust == null {
    $margin: $base-line-height / $font-size-rem;
    margin-bottom: #{$margin}#{'rem'};
  }
}
